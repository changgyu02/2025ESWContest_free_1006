import rclpy
from rclpy.node import Node
from std_srvs.srv import Trigger


class TableAlignClientNode(Node):
    def __init__(self):
        super().__init__('table_align_client_node')

        self.cli = self.create_client(Trigger, 'table_align_service')

        self.get_logger().info('🔄 서비스 준비 중...')
        if not self.cli.wait_for_service(timeout_sec=5.0):
            self.get_logger().error('❌ 정렬 서비스(/table_align_service)가 준비되지 않았습니다.')
            return

        input('⏎ 엔터키를 누르면 테이블 정렬 서비스를 요청합니다...')
        self.send_request()

    def send_request(self):
        request = Trigger.Request()

        self.get_logger().info('📨 정렬 서비스 요청을 전송합니다...')
        future = self.cli.call_async(request)
        rclpy.spin_until_future_complete(self, future)

        if future.result() is not None:
            result = future.result()
            if result.success:
                self.get_logger().info(f'✅ 정렬 성공: {result.message}')
            else:
                self.get_logger().warn(f'⚠️ 정렬 실패: {result.message}')
        else:
            self.get_logger().error('❌ 정렬 서비스 요청 실패')


def main(args=None):
    rclpy.init(args=args)
    node = TableAlignClientNode()
    node.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
