import rclpy
from rclpy.node import Node
from std_srvs.srv import SetBool

class DirtCheckClient(Node):
    def __init__(self):
        super().__init__('dirt_check_client')
        self.client = self.create_client(SetBool, 'dirt_check_service')

        while not self.client.wait_for_service(timeout_sec=1.0):
            self.get_logger().info('🔄 dirt_check_service를 기다리는 중...')

        self.get_logger().info('✅ dirt_check_service 연결 완료.')

        input("🔘 엔터 키를 누르면 오염도 판단을 요청합니다...")

        request = SetBool.Request()
        request.data = True

        self.future = self.client.call_async(request)
        self.future.add_done_callback(self.response_callback)

    def response_callback(self, future):
        try:
            response = future.result()
            result = "🟠 더럽습니다." if response.success else "✅ 깨끗합니다."
            self.get_logger().info(f'🧪 판단 결과: {result}')
        except Exception as e:
            self.get_logger().error(f'❌ 서비스 요청 실패: {e}')


def main(args=None):
    rclpy.init(args=args)
    node = DirtCheckClient()
    rclpy.spin_once(node, timeout_sec=5)  # 응답 대기
    node.destroy_node()
    rclpy.shutdown()
